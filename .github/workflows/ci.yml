name: Python package

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          node-version: '20'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          node-version: '20'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  test:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      coverage: ${{ steps.run_tests.outputs.coverage }}

    steps:
      - uses: actions/checkout@v3
        with:
          node-version: '20'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          node-version: '20'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage

      - name: Run tests with coverage
        id: run_tests
        run: |
          coverage run --source=deply -m unittest discover tests
          coverage report -m | tee coverage.txt
          TOTAL_COVERAGE=$(tail -n 1 coverage.txt | awk '{print $NF}' | sed 's/%//')
          echo "Total coverage is ${TOTAL_COVERAGE}%"
          echo "coverage=${TOTAL_COVERAGE}" >> $GITHUB_OUTPUT

  publish:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref_type == 'tag'

    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'main'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          node-version: '20'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Update version and README badges
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/v}"
          sed -i "s/__version__ = .*/__version__ = '${TAG_NAME}'/" deply/__init__.py
          echo "Updated version in deply/__init__.py to ${TAG_NAME}"
          # Get the new version from deply/__init__.py
          NEW_VERSION=$(sed -n "s/__version__ = '\(.*\)'/\1/p" deply/__init__.py)
          # Get the coverage percent from the test job output
          NEW_COVERAGE=${{ needs.test.outputs.coverage }}
          echo "Updating README badges with version ${NEW_VERSION} and coverage ${NEW_COVERAGE}%"
          # Update stable badge: matches "stable-v*" and replaces with new version badge
          sed -i "s/stable-v[0-9\.]\+/stable-v${NEW_VERSION}/" README.md
          # Update coverage badge: matches "coverage-[0-9]*%" and replaces with new coverage percent
          sed -i "s/coverage-[0-9]\+%/coverage-${NEW_COVERAGE}%/" README.md
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b temp-branch
          git add deply/__init__.py
          git add README.md
          git commit -m "Update version and README badges"
          git push origin temp-branch:main

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          python -m pip install --upgrade twine
          python setup.py sdist bdist_wheel
          python -m twine upload dist/*